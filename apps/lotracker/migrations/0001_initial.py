# Generated by Django 3.0.2 on 2020-01-28 21:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reference', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LotFts',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField(default='')),
                ('files', models.TextField(default='')),
                ('description', models.TextField(default='')),
            ],
            options={
                'db_table': 'config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Время обновления')),
                ('external_id', models.PositiveIntegerField(db_index=True, verbose_name='Номер лота')),
                ('name', models.TextField(verbose_name='Наименование заказа')),
                ('start_price', models.FloatField(verbose_name='Стартовая стоимость')),
                ('current_price', models.FloatField(null=True, verbose_name='Текущая стоимость')),
                ('next_price', models.FloatField(null=True, verbose_name='Лучшая стоимость')),
                ('deposit_amount', models.FloatField(verbose_name='Залог (на следующую цену)')),
                ('commission_amount', models.FloatField(verbose_name='Сумма комиссионного сбора (на следующую цену)')),
                ('delivery_days_count', models.PositiveIntegerField(verbose_name='Срок поставки(рабочих дней)')),
                ('payment_days_count', models.PositiveIntegerField(verbose_name='Срок оплаты')),
                ('need_delivery', models.BooleanField(default=True, verbose_name='Продавец осуществляет доставку')),
                ('delivery_address', models.CharField(max_length=255, verbose_name='Адрес доставки')),
                ('term_date', models.DateTimeField(verbose_name='Срок окончания торгов')),
                ('conditions', models.TextField(verbose_name='Условия')),
                ('url', models.URLField(max_length=150, unique=True, verbose_name='URL источника')),
                ('requests_count', models.PositiveSmallIntegerField(verbose_name='Кол-во заявок')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Area', verbose_name='Город/Район')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.ProductCategory', verbose_name='Категория')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_lotracker_lots', to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Organization', verbose_name='Заказчик')),
                ('products', models.ManyToManyField(blank=True, to='reference.Product', verbose_name='Список товаров')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Region', verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Лот',
                'verbose_name_plural': 'Лоты',
                'db_table': 'lotracker_lots',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='LotItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Время обновления')),
                ('description', models.TextField(verbose_name='Подробное описание')),
                ('expense_type_text', models.TextField(verbose_name='Статья расходов')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество товара')),
                ('unit', models.CharField(max_length=20, verbose_name='Единица измерения')),
                ('start_price', models.FloatField(verbose_name='Стартовая стоимость')),
                ('current_price', models.FloatField(null=True, verbose_name='Текущая стоимость')),
                ('next_price', models.FloatField(null=True, verbose_name='Лучшая стоимость')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_lotracker_lotitems', to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lot_items', to='lotracker.Lot')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lot_items', to='reference.Product')),
            ],
            options={
                'verbose_name': 'Элементы лота',
                'verbose_name_plural': 'Элементы лота',
                'db_table': 'lotracker_lot_items',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='LotAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Время обновления')),
                ('file', models.FileField(upload_to='attachments')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_lotracker_lotattachments', to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='lotracker.Lot')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
                'db_table': 'lotracker_lot_attachments',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='FilterSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Время обновления')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование фильтра')),
                ('query', models.CharField(max_length=255, null=True, verbose_name='Поисковое слово')),
                ('current_price_from', models.BigIntegerField(null=True, verbose_name='Текущая стоимость (от)')),
                ('current_price_to', models.BigIntegerField(null=True, verbose_name='Текущая стоимость (до)')),
                ('term_date_from', models.DateTimeField(null=True, verbose_name='Срок окончания торгов (от)')),
                ('term_date_to', models.DateTimeField(null=True, verbose_name='Срок окончания торгов (до)')),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Area', verbose_name='Город/Район')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_lotracker_filtersets', to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Organization', verbose_name='Организация')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Product', verbose_name='Товар')),
                ('product_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.ProductCategory', verbose_name='Категория товаров')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Region', verbose_name='Регион')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сохраненный набор фильтров',
                'verbose_name_plural': 'Сохраненные наборы фильтров',
                'db_table': 'lotracker_filter_sets',
                'ordering': ['-pk'],
            },
        ),
    ]
